---
title: Users
---

= Users

== Object

Properties marked `Private` are only visible when the user is your own.

[cols="2,1,5"]
|===
|Name |Type |Description

|`id` | `int` | unique identifier
|`email` | `string` | **Private**
|`is_email_confirmed` | `bool` | **Private**
|`new_email` | `string` | **Private** Used for link:/users/change-email[changing email].
|`is_new_email_confirmed` | `bool` | **Private**
|`avatar` | `image` | Sizes: `full_size(1024x1024)`, `small(64x64)`
|`first_name` | `string` |
|`last_name` | `string` |
|===

++++
<%= json :user %>
++++


== Create (register)

Register a new user.  Returns the user object.

[source]
----
POST /register
----

=== Input

[cols="2,1,5"]
|===
|Name |Type |Description

|`email` | `string` | **Required**
|`password` | `string` |  **Required**
|`referral_code` | `string` |
|===

=== Output

++++
<%= json :user %>
++++


== Retrieve

Retrieve a user.

[source]
----
GET /users/:id
----


== Update

Update a user.

[source]
----
PATCH /users/:id
PUT /users/:id
----

=== Input

[cols="2,1,5"]
|===
|Name |Type |Description

|`avatar` | `image` |
|`first_name` | `string` |
|`last_name` | `string` |
|===


== List

List users.

[source]
----
GET /users
----

=== Parameters

[cols="2,5"]
|===
|Name |Description

|`q` | A search query.
|===


== Login

Retrieve an auth token for the specified user.  See link:/authentication[Authentication] for how to use it.

[source]
----
POST /login
----

=== Input

[cols="2,1,5"]
|===
|Name |Type |Description

|`email` | `string` | **Required**
|`password` | `string` | **Required**
|===

=== Output

++++
<%= json :auth_token %>
++++


== Social Auth (Register / Login)

Login / register using a social account.

[source]
----
POST /social-auth/
----

=== Input

[cols="2,1,5"]
|===
|Name |Type |Description

|`provider` | `string` | **Required** Possible values: `facebook`.
|`access_token` | `string` | **Required**
|`email` | `string` | Used when the social auth provider does not give us an email address. See the errors section below.
|`referral_code` | `string` |
|===

=== Output

++++
<%= json :auth_token %>
++++

=== Errors

There are 4 possible errors:

* `{"provider": ["Invalid provider"]}` when an invalid provider is given.
* `{"access_token": "invalid_access_token"}` when an invalid access token is given.
* `{"email": "no_email_provided"}` when the social provider does not give us an email address and no email is given with the request.  The user should be asked to supply an email address.
* `{"email": "email_already_in_use"}` when the email given by the social provider is already associated to an account.  Registration cannot continue.


== Me

Get the currently logged in user.

[source]
----
GET /users/me
----


== Change Password

Change the password of the currently logged in user.

[source]
----
POST /users/change-password
----

=== Input

[cols="2,1,5"]
|===
|Name |Type |Description

|`current_password` | `string` | **Required**
|`new_password` | `string` | **Required**
|===


// vim: set ft=asciidoc:
